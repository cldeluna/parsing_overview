---
###############################################################################
# This playbook utilizes the Ansible network engine role and a number of other
# modules.
#
# This playbook
#   - executes a "show arp" command on the designated group
#   - formats and saves the output to a text file
#   - loads the properly formatted show command output
#   - uses the network engine textfsm_parser to parse the output
#   - and defines a list of vrf names for the device and outputs that list to
#     stdout
#
# Ultimately that list will be used to get the ARP table from each VRf
#
#
# EXECUTION:
# ansible-playbook -i hosts ansible_get.yml --ask-vault-pass
#
# To display the output variable run the playbook with a single v
# ansible-playbook -i hosts ansible_get.yml --ask-vault-pass -v
#
# Vault Password: Cisco123
###############################################################################

- hosts: sbx_nxos
  gather_facts: False
  connection: network_cli

  roles:
    - ansible-network.network-engine

  tasks:
    - name: Exceute show ip route command
      ios_command:
        commands: "{{ item }} "
      with_items:
          - "show ip route"
      register: output
      ignore_errors: yes

    - name: Debug with -v to show output contents only when debugging
      debug:
        var: output
        verbosity: 1

    - name: Show the command output with stdout_lines
      debug:
        var: "{{ output.results.0.stdout.0 }}"

    - name: Extract the semi formatted show command text output for
      set_fact:
        showcmd_content: "{{ output.results.0.stdout.0 }}"

    - name: Show the showcmd_content variable
      debug:
        var: showcmd_content

    - name: Use Network Engine Role textfsm_parser to Parse Output and store in variable cmd_facts
      textfsm_parser:
        file: './ntc-templates/templates/cisco_nxos_show_ip_route.textfsm'
        content: "{{ showcmd_content }}"
        name: cmd_facts

    - name: Show contents of variable cmd_facts
      debug:
        var: cmd_facts

#    - name: Show VRF names only
#      debug:
#        msg: "{{ item['NAME'] }}"
#      with_items:
#        - "{{ vrf_facts }}"
#
#    - name: Append new VRFS to list of VRF names
#      set_fact:
#        vrf_list: "{{ vrf_list }} + ['{{ item['NAME'] }}' ]"
#      with_items:
#        - "{{ vrf_facts }}"
#
#    - name: Show Complete List of VRF Names
#      debug: var=vrf_list